

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Oct 24 13:10:44 2018

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "E:\02-CODING\05-LYCASOFT CODING\02-CODING\20-INTERRUPT                             
                                             XXX\CODE\INTERRUPT.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "E:\02-CODING\05-LYCASOFT CODING\02-CODING\20-INTERRUPT                             
                                             XXX\CODE\INTERRUPT.c"
    45  2007  3F3A               	dw 0X3F3A ;#
    46                           	FNROOT	_main
    47                           	FNCALL	intlevel1,_ISR
    48                           	global	intlevel1
    49                           	FNROOT	intlevel1
    50                           	global	_INTCON
    51                           psect	maintext,global,class=CODE,delta=2
    52                           global __pmaintext
    53  0015                     __pmaintext:
    54  000B                     _INTCON	set	11
    55                           	global	_PORTB
    56  0006                     _PORTB	set	6
    57                           	global	_PORTC
    58  0007                     _PORTC	set	7
    59                           	global	_CARRY
    60  0018                     _CARRY	set	24
    61                           	global	_GIE
    62  005F                     _GIE	set	95
    63                           	global	_INTF
    64  0059                     _INTF	set	89
    65                           	global	_RC0
    66  0038                     _RC0	set	56
    67                           	global	_RC1
    68  0039                     _RC1	set	57
    69                           	global	_TRISB
    70  0086                     _TRISB	set	134
    71                           	global	_TRISC
    72  0087                     _TRISC	set	135
    73                           	global	_EEADR
    74  010D                     _EEADR	set	269
    75                           	global	_EEDATA
    76  010C                     _EEDATA	set	268
    77                           	global	_EECON1
    78  018C                     _EECON1	set	396
    79                           	global	_EECON2
    80  018D                     _EECON2	set	397
    81                           	global	_RD
    82  0C60                     _RD	set	3168
    83                           	global	_WR
    84  0C61                     _WR	set	3169
    85                           	global	_WREN
    86  0C62                     _WREN	set	3170
    87                           	file	"INTERRUPT.as"
    88                           	line	#
    89                           psect cinit,class=CODE,delta=2
    90                           global start_initialization
    91  004A                     start_initialization:
    92                           
    93                           psect cinit,class=CODE,delta=2
    94                           global end_of_initialization
    95                           
    96                           ;End of C runtime variable initialization code
    97                           
    98  004A                     end_of_initialization:
    99  004A  0183               clrf status
   100  004B  120A  118A  2815   ljmp _main	;jump to C main() function
   101                           psect	cstackCOMMON,class=COMMON,space=1
   102                           global __pcstackCOMMON
   103  0070                     __pcstackCOMMON:
   104                           	global	?_ISR
   105  0070                     ?_ISR:	; 0 bytes @ 0x0
   106                           	global	??_ISR
   107  0070                     ??_ISR:	; 0 bytes @ 0x0
   108                           	global	?_main
   109  0070                     ?_main:	; 0 bytes @ 0x0
   110  0070                     	ds	4
   111                           	global	??_main
   112  0074                     ??_main:	; 0 bytes @ 0x4
   113  0074                     	ds	2
   114 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   115 ;;Auto spaces:   Size  Autos    Used
   116 ;; COMMON          14      6       6
   117 ;; BANK0           80      0       0
   118 ;; BANK1           80      0       0
   119 ;; BANK3           96      0       0
   120 ;; BANK2           96      0       0
   121                           
   122 ;;
   123 ;; Pointer list with targets:
   124                           
   125                           
   126                           
   127 ;;
   128 ;; Critical Paths under _main in COMMON
   129 ;;
   130 ;;   None.
   131 ;;
   132 ;; Critical Paths under _ISR in COMMON
   133 ;;
   134 ;;   None.
   135 ;;
   136 ;; Critical Paths under _main in BANK0
   137 ;;
   138 ;;   None.
   139 ;;
   140 ;; Critical Paths under _ISR in BANK0
   141 ;;
   142 ;;   None.
   143 ;;
   144 ;; Critical Paths under _main in BANK1
   145 ;;
   146 ;;   None.
   147 ;;
   148 ;; Critical Paths under _ISR in BANK1
   149 ;;
   150 ;;   None.
   151 ;;
   152 ;; Critical Paths under _main in BANK3
   153 ;;
   154 ;;   None.
   155 ;;
   156 ;; Critical Paths under _ISR in BANK3
   157 ;;
   158 ;;   None.
   159 ;;
   160 ;; Critical Paths under _main in BANK2
   161 ;;
   162 ;;   None.
   163 ;;
   164 ;; Critical Paths under _ISR in BANK2
   165 ;;
   166 ;;   None.
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   170 ;;
   171                           
   172 ;;
   173 ;;Call Graph Tables:
   174 ;;
   175 ;; ---------------------------------------------------------------------------------
   176 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   177 ;; ---------------------------------------------------------------------------------
   178 ;; (0) _main                                                 2     2      0       0
   179 ;;                                              4 COMMON     2     2      0
   180 ;; ---------------------------------------------------------------------------------
   181 ;; Estimated maximum stack depth 0
   182 ;; ---------------------------------------------------------------------------------
   183 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   184 ;; ---------------------------------------------------------------------------------
   185 ;; (1) _ISR                                                  4     4      0       0
   186 ;;                                              0 COMMON     4     4      0
   187 ;; ---------------------------------------------------------------------------------
   188 ;; Estimated maximum stack depth 1
   189 ;; ---------------------------------------------------------------------------------
   190                           
   191 ;; Call Graph Graphs:
   192                           
   193 ;; _main (ROOT)
   194 ;;
   195 ;; _ISR (ROOT)
   196 ;;
   197                           
   198 ;; Address spaces:
   199                           
   200 ;;Name               Size   Autos  Total    Cost      Usage
   201 ;;BITCOMMON            E      0       0       0        0.0%
   202 ;;EEDATA             100      0       0       0        0.0%
   203 ;;NULL                 0      0       0       0        0.0%
   204 ;;CODE                 0      0       0       0        0.0%
   205 ;;COMMON               E      6       6       1       42.9%
   206 ;;BITSFR0              0      0       0       1        0.0%
   207 ;;SFR0                 0      0       0       1        0.0%
   208 ;;BITSFR1              0      0       0       2        0.0%
   209 ;;SFR1                 0      0       0       2        0.0%
   210 ;;STACK                0      0       0       2        0.0%
   211 ;;ABS                  0      0       0       3        0.0%
   212 ;;BITBANK0            50      0       0       4        0.0%
   213 ;;BITSFR3              0      0       0       4        0.0%
   214 ;;SFR3                 0      0       0       4        0.0%
   215 ;;BANK0               50      0       0       5        0.0%
   216 ;;BITSFR2              0      0       0       5        0.0%
   217 ;;SFR2                 0      0       0       5        0.0%
   218 ;;BITBANK1            50      0       0       6        0.0%
   219 ;;BANK1               50      0       0       7        0.0%
   220 ;;BITBANK3            60      0       0       8        0.0%
   221 ;;BANK3               60      0       0       9        0.0%
   222 ;;BITBANK2            60      0       0      10        0.0%
   223 ;;BANK2               60      0       0      11        0.0%
   224 ;;DATA                 0      0       0      12        0.0%
   225                           
   226                           	global	_main
   227                           psect	maintext
   228                           
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 16 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\20-INTERRUPT                                         XXX\
       CODE\INTERRUPT.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;		None               void
   238 ;; Registers used:
   239 ;;		wreg, status,2
   240 ;; Tracked objects:
   241 ;;		On entry : 17F/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0
   248 ;;      Totals:         2       0       0       0       0
   249 ;;Total ram usage:        2 bytes
   250 ;; Hardware stack levels required when called:    1
   251 ;; This function calls:
   252 ;;		Nothing
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           psect	maintext
   258                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\20-INTERRUPT                           
                                               XXX\CODE\INTERRUPT.c"
   259                           	line	16
   260                           	global	__size_of_main
   261  0022                     	__size_of_main	equ	__end_of_main-_main
   262                           	
   263  0015                     _main:	
   264                           	opt	stack 7
   265                           ; Regs used in _main: [wreg+status,2]
   266                           	line	17
   267                           	
   268  0015                     l2605:	
   269                           ;INTERRUPT.c: 17: TRISB=0X01;
   270  0015  3001               	movlw	(01h)
   271  0016  1683               	bsf	status, 5	;RP0=1, select bank1
   272  0017  1303               	bcf	status, 6	;RP1=0, select bank1
   273  0018  0086               	movwf	(134)^080h	;volatile
   274                           	line	18
   275                           	
   276  0019                     l2607:	
   277                           ;INTERRUPT.c: 18: PORTB=0X00;
   278  0019  1283               	bcf	status, 5	;RP0=0, select bank0
   279  001A  1303               	bcf	status, 6	;RP1=0, select bank0
   280  001B  0186               	clrf	(6)	;volatile
   281                           	line	19
   282                           	
   283  001C                     l2609:	
   284                           ;INTERRUPT.c: 19: TRISC=0X00;
   285  001C  1683               	bsf	status, 5	;RP0=1, select bank1
   286  001D  1303               	bcf	status, 6	;RP1=0, select bank1
   287  001E  0187               	clrf	(135)^080h	;volatile
   288                           	line	20
   289                           	
   290  001F                     l2611:	
   291                           ;INTERRUPT.c: 20: PORTC=0X00;
   292  001F  1283               	bcf	status, 5	;RP0=0, select bank0
   293  0020  1303               	bcf	status, 6	;RP1=0, select bank0
   294  0021  0187               	clrf	(7)	;volatile
   295                           	line	22
   296                           	
   297  0022                     l2613:	
   298                           ;INTERRUPT.c: 22: INTCON=0X90;
   299  0022  3090               	movlw	(090h)
   300  0023  008B               	movwf	(11)	;volatile
   301  0024  2825               	goto	l2615
   302                           	line	24
   303                           ;INTERRUPT.c: 24: while(1)
   304                           	
   305  0025                     l691:	
   306                           	line	26
   307                           	
   308  0025                     l2615:	
   309                           ;INTERRUPT.c: 25: {
   310                           ;INTERRUPT.c: 26: RC0=~RC0;
   311  0025  3001               	movlw	1<<((56)&7)
   312  0026  1283               	bcf	status, 5	;RP0=0, select bank0
   313  0027  1303               	bcf	status, 6	;RP1=0, select bank0
   314  0028  0687               	xorwf	((56)/8),f
   315                           	line	27
   316                           	
   317  0029                     l2617:	
   318                           ;INTERRUPT.c: 27: _delay((unsigned long)((10)*(20e6/4000.0)));
   319                           	opt asmopt_off
   320  0029  3041               movlw	65
   321  002A  00F5               movwf	((??_main+0)+0+1),f
   322  002B  30EE               	movlw	238
   323  002C  00F4               movwf	((??_main+0)+0),f
   324  002D                     u2237:
   325  002D  0BF4               	decfsz	((??_main+0)+0),f
   326  002E  282D               	goto	u2237
   327  002F  0BF5               	decfsz	((??_main+0)+0+1),f
   328  0030  282D               	goto	u2237
   329  0031  0064               	clrwdt
   330                           opt asmopt_on
   331                           
   332  0032  2825               	goto	l2615
   333                           	line	28
   334                           	
   335  0033                     l692:	
   336                           	line	24
   337  0033  2825               	goto	l2615
   338                           	
   339  0034                     l693:	
   340                           	line	29
   341                           	
   342  0034                     l694:	
   343                           	global	start
   344  0034  120A  118A  2812   	ljmp	start
   345                           	opt stack 0
   346                           GLOBAL	__end_of_main
   347  0037                     	__end_of_main:
   348 ;; =============== function _main ends ============
   349                           
   350                           	signat	_main,88
   351                           	global	_ISR
   352                           psect	text71,local,class=CODE,delta=2
   353                           global __ptext71
   354  0037                     __ptext71:
   355                           
   356 ;; *************** function _ISR *****************
   357 ;; Defined at:
   358 ;;		line 7 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\20-INTERRUPT                                         XXX\C
       ODE\INTERRUPT.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;		None               void
   365 ;; Registers used:
   366 ;;		wreg
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          4       0       0       0       0
   375 ;;      Totals:         4       0       0       0       0
   376 ;;Total ram usage:        4 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		Interrupt level 1
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           psect	text71
   385                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\20-INTERRUPT                           
                                               XXX\CODE\INTERRUPT.c"
   386                           	line	7
   387                           	global	__size_of_ISR
   388  0013                     	__size_of_ISR	equ	__end_of_ISR-_ISR
   389                           	
   390  0037                     _ISR:	
   391                           	opt	stack 7
   392                           ; Regs used in _ISR: [wreg]
   393                           psect	intentry,class=CODE,delta=2
   394                           global __pintentry
   395  0004                     __pintentry:
   396                           global interrupt_function
   397  0004                     interrupt_function:
   398                           	global saved_w
   399  007E                     	saved_w	set	btemp+0
   400  0004  00FE               	movwf	saved_w
   401  0005  0E03               	swapf	status,w
   402  0006  00F0               	movwf	(??_ISR+0)
   403  0007  0804               	movf	fsr0,w
   404  0008  00F1               	movwf	(??_ISR+1)
   405  0009  080A               	movf	pclath,w
   406  000A  00F2               	movwf	(??_ISR+2)
   407  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   408  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   409  000D  087F               	movf	btemp+1,w
   410  000E  00F3               	movwf	(??_ISR+3)
   411  000F  120A  118A  2837   	ljmp	_ISR
   412                           psect	text71
   413                           	line	8
   414                           	
   415  0037                     i1l1741:	
   416                           ;INTERRUPT.c: 8: if(INTF==1)
   417  0037  1C8B               	btfss	(89/8),(89)&7
   418  0038  283A               	goto	u1_21
   419  0039  283B               	goto	u1_20
   420  003A                     u1_21:
   421  003A  283F               	goto	i1l688
   422  003B                     u1_20:
   423                           	line	10
   424                           	
   425  003B                     i1l1743:	
   426                           ;INTERRUPT.c: 9: {
   427                           ;INTERRUPT.c: 10: RC1=~RC1;
   428  003B  3002               	movlw	1<<((57)&7)
   429  003C  0687               	xorwf	((57)/8),f
   430                           	line	11
   431                           	
   432  003D                     i1l1745:	
   433                           ;INTERRUPT.c: 11: INTF=0;
   434  003D  108B               	bcf	(89/8),(89)&7
   435  003E  283F               	goto	i1l688
   436                           	line	12
   437                           	
   438  003F                     i1l687:	
   439                           	line	13
   440                           	
   441  003F                     i1l688:	
   442  003F  0873               	movf	(??_ISR+3),w
   443  0040  00FF               	movwf	btemp+1
   444  0041  0872               	movf	(??_ISR+2),w
   445  0042  008A               	movwf	pclath
   446  0043  0871               	movf	(??_ISR+1),w
   447  0044  0084               	movwf	fsr0
   448  0045  0E70               	swapf	(??_ISR+0)^0FFFFFF80h,w
   449  0046  0083               	movwf	status
   450  0047  0EFE               	swapf	saved_w,f
   451  0048  0E7E               	swapf	saved_w,w
   452  0049  0009               	retfie
   453                           	opt stack 0
   454                           GLOBAL	__end_of_ISR
   455  004A                     	__end_of_ISR:
   456 ;; =============== function _ISR ends ============
   457                           
   458                           	signat	_ISR,88
   459                           psect	text72,local,class=CODE,delta=2
   460                           global __ptext72
   461  0000                     __ptext72:
   462                           	global	btemp
   463  007E                     	btemp set 07Eh
   464                           
   465                           	DABS	1,126,2	;btemp
   466                           	global	wtemp0
   467  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Oct 24 13:10:44 2018

                  _RD 0C60                    _WR 0C61                   l691 0025                   l692 0033  
                 l693 0034                   l694 0034                   _GIE 005F                   _RC0 0038  
                 _RC1 0039                   _ISR 0037                   fsr0 0004                  ?_ISR 0070  
                l2611 001F                  l2613 0022                  l2605 0015                  l2615 0025  
                l2607 0019                  l2617 0029                  l2609 001C                  u2237 002D  
                _INTF 0059                  _WREN 0C62                  u1_20 003B                  u1_21 003A  
                _main 0015                  btemp 007E                  start 0012                 ??_ISR 0070  
               ?_main 0070                 _EEADR 010D                 _CARRY 0018                 i1l687 003F  
               i1l688 003F                 _PORTB 0006                 _PORTC 0007                 _TRISB 0086  
               _TRISC 0087                 pclath 000A                 status 0003                 wtemp0 007E  
        __end_of_main 0037                ??_main 0074                _EEDATA 010C                _EECON1 018C  
              _EECON2 018D                i1l1741 0037                i1l1743 003B                i1l1745 003D  
              _INTCON 000B                saved_w 007E        __pcstackCOMMON 0070            __pmaintext 0015  
          __pintentry 0004          __size_of_ISR 0013  end_of_initialization 004A   start_initialization 004A  
         __end_of_ISR 004A     interrupt_function 0004              __ptext71 0037              __ptext72 0000  
       __size_of_main 0022              intlevel1 0000  
